/* AUTOGENERATED FILE - DO NOT EDIT CONTENTS */

/* Table schema:
CREATE TABLE kv_store_3aa6b185 (
  key TEXT NOT NULL PRIMARY KEY,
  value JSONB NOT NULL
);
*/

// View at https://supabase.com/dashboard/project/ekqniyjnrpxkbmjbpcsu/database/tables

// This file provides a simple key-value interface for storing Figma Make data. It should be adequate for most small-scale use cases.
import { createClient } from "jsr:@supabase/supabase-js@2";

const client = () => createClient(
  Deno.env.get("SUPABASE_URL"),
  Deno.env.get("SUPABASE_SERVICE_ROLE_KEY"),
);

// ⚠️ FICHIER OBSOLÈTE ⚠️
// 
// Ce fichier KV Store a été remplacé par Supabase PostgreSQL.
// Conservé uniquement pour référence historique.
// 
// MIGRATION TERMINÉE:
// - Utilisateurs -> table `users` 
// - Packs -> table `packs`
// - Catégories -> table `pack_categories`
// - Centres d'intérêt -> tables `interests` et `user_interests`
// 
// @deprecated Utilisez directement les tables Supabase

console.warn('⚠️ KV Store obsolète: utilisez les tables Supabase directement')

// Export de fonctions vides pour éviter les erreurs d'import
export const set = async (): Promise<void> => {
  throw new Error('KV Store obsolète - utilisez Supabase')
}

export const get = async (): Promise<any> => {
  throw new Error('KV Store obsolète - utilisez Supabase')
}

export const del = async (): Promise<void> => {
  throw new Error('KV Store obsolète - utilisez Supabase')
}

export const mset = async (): Promise<void> => {
  throw new Error('KV Store obsolète - utilisez Supabase')
}

export const mget = async (): Promise<any[]> => {
  throw new Error('KV Store obsolète - utilisez Supabase')
}

export const mdel = async (): Promise<void> => {
  throw new Error('KV Store obsolète - utilisez Supabase')
}

export const getByPrefix = async (): Promise<any[]> => {
  throw new Error('KV Store obsolète - utilisez Supabase')
};